- name: configure catalogue
  hosts: catalogue
  become: yes
  tasks:
  - name: disable default nodejs
    ansbile.builtin.command: "dnf module disable nodejs -y"

  - name: enable nodejs-20
    ansible.builtin.command: "dnf module enable nodejs:20 -y"

  - name: install nodejs
    ansbile.builtin.dnf:
      name: nodejs
      state: installed
  
  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /app
      state: directory

  - name: add roboshop user 
    ansible.builtin.user:
      name: Roboshop 
      shell: /sbin/nologin
      system: true
      home: /app

  - name: download catalogue code
    ansible.builtin.get_url:
      src: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip 
      dest: /tmp/catalogue.zip
  
  - name: unzip catalogue code
    ansbile.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: install npm 
    community.general.npm:
      name: npm 
      path: /app

  - name: copy catalogue service
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service
  
  - name: systemctl service
    ansbile.builtin.systemd_service:
      daemon_reload: true

  - name: start and enable catalogue service
    ansible.builtin.service:
      name: catalogue 
      state: started
      enabled: yes

  - name:  install mongodb client
    ansible.builtin.dnf:
      name: mongodb-mongosh
      state: present

  - name: check products loaded or not
    ansible.builtin.command: mongosh --host mongodb.daws84s.site --eval 'db.getMongo().getDBNames().indexOf("catalogue")'
    register: catalogue_output

  - name: print catalogue output
    ansible.builtin.debug:
      msg: "{{ catalogue_output }}"

  - name: load products
    ansible.builtin.shell: mongosh --host mongodb.daws84s.site < /app/db/master-data.js
    when: catalogue_output.stdout | int < 0